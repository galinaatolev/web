@model IEnumerable<BeautyMoldova.Domain.Models.Product>
@{
    string title = ViewBag.Title ?? "Discounted Products";
    ViewBag.Title = title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row">
        <!-- Sidebar with filters -->
        <div class="col-lg-3 mb-4 mb-lg-0">
            <div class="card border-0 shadow-sm mb-4 sticky-top" style="top: 20px;">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0">Filters</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Discounts", "Promotion", FormMethod.Get, new { id = "filterForm" }))
                    {
                        <input type="hidden" name="page" value="1" />
                        
                        <div class="mb-3">
                            <label class="form-label fw-bold">Categories</label>
                            <select name="categoryId" class="form-select" onchange="document.getElementById('filterForm').submit();">
                                <option value="">All categories</option>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <option value="@category.Id" @(ViewBag.CategoryId == category.Id ? "selected" : "")>@category.Name</option>
                                    if (category.ChildCategories != null)
                                    {
                                        var childCategories = ((IEnumerable<dynamic>)category.ChildCategories)
                                            .Where(c => (bool)c.IsActive)
                                            .OrderBy(c => (int)c.DisplayOrder);
                                            
                                        foreach (var child in childCategories)
                                        {
                                            <option value="@child.Id" @(ViewBag.CategoryId == child.Id ? "selected" : "")>&nbsp;&nbsp;&nbsp;@child.Name</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        
                        <button type="submit" class="btn btn-danger w-100">Apply</button>
                        <a href="@Url.Action("Discounts", "Promotion")" class="btn btn-outline-secondary w-100 mt-2">Reset</a>
                    }
                </div>
            </div>
            
            <!-- Information block about discounts -->
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">About Discounts</h5>
                    <p class="card-text small">
                        Our product discounts can reach up to 50%! We regularly update 
                        our catalog of discounted products so you can purchase quality 
                        cosmetics at great prices.
                    </p>
                    <hr>
                    <h6>For account holders:</h6>
                    <ul class="small mb-0">
                        <li>Personal discounts</li>
                        <li>Bonus points accumulation</li>
                        <li>Special offers for regular customers</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <!-- Discounted products list -->
        <div class="col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">
                        @if (ViewBag.CategoryName != null)
                        {
                            @ViewBag.CategoryName <span class="text-danger">on sale</span>
                        }
                        else
                        {
                            @title
                        }
                    </h1>
                    <p class="text-muted">Products found: @ViewBag.TotalItems</p>
                </div>
            </div>
            
            @if (!Model.Any())
            {
                <div class="alert alert-info">
                    <p class="mb-0">No products found for your request. Try changing the filter parameters.</p>
                </div>
            }
            else
            {
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach (var product in Model)
                    {
                        var discountPercent = (int)Math.Round((1 - product.DiscountPrice.Value / product.Price) * 100);
                        
                        <div class="col">
                            <div class="card h-100 shadow-sm product-card">
                                <div class="position-relative">
                                    <img src="@Url.Content(string.IsNullOrEmpty(product.MainImage) ? "~/Content/images/no-image.jpg" : product.MainImage)" 
                                         class="card-img-top product-img" alt="@product.Name">
                                    
                                    <span class="badge bg-danger position-absolute top-0 end-0 m-2 p-2 fs-6">-@discountPercent%</span>
                                    
                                    @if (product.IsFeatured)
                                    {
                                        <span class="badge bg-success position-absolute top-0 start-0 m-2">Best Seller</span>
                                    }
                                </div>
                                
                                <div class="card-body d-flex flex-column">
                                    <p class="card-text text-muted small mb-1">@product.Manufacturer.Name</p>
                                    <h5 class="card-title mb-1">
                                        <a href="@Url.Action("ProductDetails", "Catalog", new { id = product.Id })" 
                                           class="text-decoration-none text-dark product-link">@product.Name</a>
                                    </h5>
                                    <p class="card-text text-muted small mb-2">@product.Category.Name</p>
                                    
                                    <div class="mt-auto">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                <span class="fw-bold fs-5 text-danger me-2">@product.DiscountPrice.Value.ToString("N0") MDL</span>
                                                <span class="text-muted text-decoration-line-through">@product.Price.ToString("N0") MDL</span>
                                            </div>
                                            
                                            <a href="@Url.Action("ProductDetails", "Catalog", new { id = product.Id })" 
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </div>
                                        
                                        <div class="d-grid gap-2 mt-3">
                                            <button class="btn btn-danger add-to-cart" data-product-id="@product.Id">
                                                <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                if (ViewBag.TotalPages > 1)
                {
                    <nav class="mt-4">
                        <ul class="pagination justify-content-center">
                            @if (ViewBag.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Discounts", "Promotion", new { 
                                        categoryId = ViewBag.CategoryId, 
                                        page = ViewBag.CurrentPage - 1
                                    })">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }
                            
                            @{
                                int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                                int endPage = Math.Min(ViewBag.TotalPages, startPage + 4);
                                
                                if (endPage - startPage < 4)
                                {
                                    startPage = Math.Max(1, endPage - 4);
                                }
                            }
                            
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Discounts", "Promotion", new { 
                                        categoryId = ViewBag.CategoryId, 
                                        page = i
                                    })">@i</a>
                                </li>
                            }
                            
                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Discounts", "Promotion", new { 
                                        categoryId = ViewBag.CategoryId, 
                                        page = ViewBag.CurrentPage + 1
                                    })">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

<style>
    .product-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }
    
    .product-img {
        height: 220px;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .product-card:hover .product-img {
        transform: scale(1.05);
    }
    
    .product-link:hover {
        color: #e83e8c !important;
    }
</style>

@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add to cart handler
            document.querySelectorAll('.add-to-cart').forEach(function(button) {
                button.addEventListener('click', function() {
                    var productId = this.getAttribute('data-product-id');
                    
                    // AJAX request to add to cart
                    fetch('@Url.Action("AddToCart", "Cart")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ productId: productId, quantity: 1 })
                    })
                    .then(function(response) { return response.json(); })
                    .then(function(data) {
                        if (data.success) {
                            alert('Product added to cart!');
                            // Can update cart count here if needed
                        } else {
                            alert(data.message || 'An error occurred while adding the product to the cart.');
                        }
                    })
                    .catch(function(error) {
                        console.error('Error:', error);
                        alert('An error occurred while adding the product to the cart.');
                    });
                });
            });
        });
    </script>
} 