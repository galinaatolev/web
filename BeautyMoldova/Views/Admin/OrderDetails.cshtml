@model BeautyMoldova.Domain.Models.Purchase
@{
    ViewBag.Title = "Order Details";
}

<div class="bg-white rounded-lg shadow-md overflow-hidden">
    <div class="p-6 border-b border-gray-200">
        <div class="flex flex-col md:flex-row md:justify-between md:items-center">
            <div class="mb-4 md:mb-0">
                <h1 class="text-2xl font-bold text-gray-800">Order #@Model.Id</h1>
                <p class="text-gray-600 mt-1">Placed on @Model.PurchaseDate.ToString("dd.MM.yyyy HH:mm")</p>
            </div>
            <div>
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium 
                    @(Model.Status == "Processing" ? "bg-yellow-100 text-yellow-800" : 
                    Model.Status == "Shipped" ? "bg-blue-100 text-blue-800" : 
                    Model.Status == "Delivered" ? "bg-green-100 text-green-800" : 
                    Model.Status == "Cancelled" ? "bg-red-100 text-red-800" : "bg-gray-100 text-gray-800")">
                    @Model.Status
                </span>
            </div>
        </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 p-6 border-b border-gray-200">
        <div>
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Customer Information</h2>
            <div class="space-y-2">
                <p><span class="font-medium">Name:</span> @Model.Customer.FirstName @Model.Customer.LastName</p>
                <p><span class="font-medium">Email:</span> @Model.Customer.Email</p>
                <p><span class="font-medium">Phone:</span> @Model.Customer.PhoneNumber</p>
                <p><span class="font-medium">Account Created:</span> @Model.Customer.RegistrationDate.ToString("dd.MM.yyyy")</p>
            </div>
        </div>
        <div>
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Order Information</h2>
            <div class="space-y-2">
                <p><span class="font-medium">Payment Method:</span> @Model.PaymentMethod</p>
                <p><span class="font-medium">Shipping Method:</span> @Model.ShippingMethod</p>
                @if (!string.IsNullOrEmpty(Model.TrackingNumber))
                {
                    <p><span class="font-medium">Tracking Number:</span> @Model.TrackingNumber</p>
                }
                <p><span class="font-medium">Shipping Address:</span> @Model.ShippingAddress</p>
                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <p><span class="font-medium">Customer Notes:</span> @Model.Notes</p>
                }
            </div>
        </div>
    </div>
    
    <div class="p-6 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">Order Items</h2>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Product
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Unit Price
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Quantity
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Total
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var item in Model.PurchaseItems)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0 h-10 w-10">
                                        <img class="h-10 w-10 rounded-md object-cover" 
                                             src="@(string.IsNullOrEmpty(item.Product.MainImage) ? "/Content/images/no-image.jpg" : "/Content/images/" + item.Product.MainImage)" 
                                             alt="@item.Product.Name">
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900">@item.Product.Name</div>
                                        <div class="text-sm text-gray-500">@item.Product.Manufacturer.Name</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">@item.UnitPrice.ToString("N0") MDL</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">@item.Quantity</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">@item.TotalPrice.ToString("N0") MDL</div>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot class="bg-gray-50">
                    <tr>
                        <td colspan="3" class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium text-gray-900">
                            Subtotal:
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                            @Model.TotalAmount.ToString("N0") MDL
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium text-gray-900">
                            Shipping:
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                            @Model.ShippingCost.ToString("N0") MDL
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium text-gray-900">
                            <strong>Total:</strong>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-lg font-bold text-pink-600">
                            @((Model.TotalAmount + Model.ShippingCost).ToString("N0")) MDL
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    
    <div class="p-6 grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Update Order Status -->
        <div class="bg-gray-50 rounded-lg p-4">
            <h2 class="text-lg font-semibold text-gray-800 mb-4">Update Order Status</h2>
            @using (Html.BeginForm("UpdateOrderStatus", "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                    <select name="status" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500">
                        <option value="Processing" @(Model.Status == "Processing" ? "selected" : "")>Processing</option>
                        <option value="Shipped" @(Model.Status == "Shipped" ? "selected" : "")>Shipped</option>
                        <option value="Delivered" @(Model.Status == "Delivered" ? "selected" : "")>Delivered</option>
                        <option value="Cancelled" @(Model.Status == "Cancelled" ? "selected" : "")>Cancelled</option>
                    </select>
                </div>
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Tracking Number</label>
                    <input type="text" name="trackingNumber" value="@Model.TrackingNumber" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500" placeholder="Enter tracking number">
                </div>
                
                <button type="submit" class="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500">
                    <i class="fas fa-save mr-2"></i> Update Status
                </button>
            }
            
            @if (Model.Status != "Cancelled" && Model.Status != "Delivered")
            {
                <div class="mt-4">
                    <button type="button" class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" onclick="showCancellationModal()">
                        <i class="fas fa-times-circle mr-2"></i> Cancel Order
                    </button>
                </div>
            }
        </div>
        
        <!-- Order Notes -->
        <div class="bg-gray-50 rounded-lg p-4">
            <h2 class="text-lg font-semibold text-gray-800 mb-4">Admin Notes</h2>
            @using (Html.BeginForm("AddOrderNote", "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                
                <div class="mb-4">
                    <textarea name="note" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500" placeholder="Add a note about this order"></textarea>
                </div>
                
                <button type="submit" class="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500">
                    <i class="fas fa-plus mr-2"></i> Add Note
                </button>
            }
            
            <div class="mt-4 max-h-40 overflow-y-auto p-3 bg-white rounded-md border border-gray-200">
                @if (string.IsNullOrEmpty(Model.AdminNotes))
                {
                    <p class="text-gray-500 text-sm italic">No notes yet</p>
                }
                else
                {
                    <pre class="text-sm text-gray-700 whitespace-pre-wrap">@Model.AdminNotes</pre>
                }
            </div>
        </div>
    </div>
    
    <div class="p-6 bg-gray-50 border-t border-gray-200">
        <div class="flex justify-between">
            <a href="@Url.Action("Orders", "Admin")" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500">
                <i class="fas fa-arrow-left mr-2"></i> Back to Orders
            </a>
            <a href="#" onclick="window.print(); return false;" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500">
                <i class="fas fa-print mr-2"></i> Print Order
            </a>
        </div>
    </div>
</div>

<!-- Cancellation Modal -->
<div id="cancellationModal" class="fixed inset-0 z-50 hidden">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Confirm Order Cancellation</h3>
            <p class="text-sm text-gray-500 mb-4">Are you sure you want to cancel this order? This action cannot be undone.</p>
            
            @using (Html.BeginForm("CancelOrder", "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-1">Reason for Cancellation</label>
                    <textarea name="cancellationReason" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-pink-500 focus:border-pink-500" required></textarea>
                </div>
                
                <div class="mt-5 sm:mt-6 flex justify-end space-x-3">
                    <button type="button" class="inline-flex justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500" onclick="hideCancellationModal()">
                        Cancel
                    </button>
                    <button type="submit" class="inline-flex justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Cancel Order
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        function showCancellationModal() {
            document.getElementById('cancellationModal').classList.remove('hidden');
        }
        
        function hideCancellationModal() {
            document.getElementById('cancellationModal').classList.add('hidden');
        }
    </script>
} 