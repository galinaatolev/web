@model List<BeautyMoldova.Controllers.CartItemViewModel>
@{
    ViewBag.Title = "Shopping Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <h1 class="h2 mb-4">Shopping Cart</h1>
    
    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-shopping-cart fa-4x text-muted mb-4"></i>
            <h3 class="mb-3">Your cart is empty</h3>
            <p class="text-muted mb-4">Looks like you haven't added any products to your cart yet.</p>
            <a href="@Url.Action("Index", "Catalog")" class="btn btn-primary">
                <i class="fas fa-shopping-bag me-2"></i> Continue Shopping
            </a>
        </div>
    }
    else
    {
        <div class="row">
            <!-- Cart Items -->
            <div class="col-lg-8 mb-4 mb-lg-0">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-transparent border-0 py-3">
                        <h4 class="card-title mb-0">Cart Items (@Model.Sum(i => i.Quantity))</h4>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table align-middle mb-0">
                                <thead class="bg-light">
                                    <tr>
                                        <th class="border-0">Product</th>
                                        <th class="border-0 text-center">Price</th>
                                        <th class="border-0 text-center">Quantity</th>
                                        <th class="border-0 text-end">Subtotal</th>
                                        <th class="border-0"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="cart-item" data-product-id="@item.ProductId" data-product-price="@item.Price" data-product-max="@item.StockQuantity">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="flex-shrink-0 me-3">
                                                        <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/Content/images/no-image.jpg" : "/Content/images/" + item.ImageUrl)" 
                                                             class="img-thumbnail" style="width: 75px; height: 75px; object-fit: cover;" alt="@item.Name">
                                                    </div>
                                                    <div>
                                                        <h5 class="mb-1">@item.Name</h5>
                                                        <div class="text-muted small">@item.Manufacturer</div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center">
                                                <span class="fw-bold">@item.Price.ToString("N0") MDL</span>
                                            </td>
                                            <td class="text-center" style="min-width: 140px;">
                                                <div class="input-group quantity-control">
                                                    <button class="btn btn-outline-secondary minus-btn" type="button">
                                                        <i class="fas fa-minus"></i>
                                                    </button>
                                                    <input type="number" class="form-control text-center quantity-input" value="@item.Quantity" min="1" max="@item.StockQuantity">
                                                    <button class="btn btn-outline-secondary plus-btn" type="button">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="text-end">
                                                <span class="fw-bold item-subtotal">@item.SubTotal.ToString("N0") MDL</span>
                                            </td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-link text-danger p-0 remove-item">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex flex-wrap justify-content-between align-items-center mt-4">
                    <a href="@Url.Action("Index", "Catalog")" class="btn btn-outline-secondary mb-2 mb-sm-0">
                        <i class="fas fa-arrow-left me-2"></i> Continue Shopping
                    </a>
                    <button id="clearCart" class="btn btn-outline-danger mb-2 mb-sm-0">
                        <i class="fas fa-trash-alt me-2"></i> Clear Cart
                    </button>
                </div>
            </div>
            
            <!-- Cart Summary -->
            <div class="col-lg-4">
                <div class="card border-0 shadow-sm mb-4 sticky-top" style="top: 20px;">
                    <div class="card-header bg-transparent border-0 py-3">
                        <h4 class="card-title mb-0">Order Summary</h4>
                    </div>
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between mb-3">
                            <span>Subtotal:</span>
                            <span class="cart-subtotal">@Model.Sum(i => i.SubTotal).ToString("N0") MDL</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Shipping:</span>
                            <span>Free</span>
                        </div>
                        <div class="d-flex justify-content-between mb-3 pt-3 border-top">
                            <span class="h5 mb-0">Total:</span>
                            <span class="h5 mb-0 cart-total">@Model.Sum(i => i.SubTotal).ToString("N0") MDL</span>
                        </div>
                        
                        <a href="@Url.Action("Checkout", "Cart")" class="btn btn-primary w-100 mt-3">
                            <i class="fas fa-check me-2"></i> Proceed to Checkout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Quantity controls
            $('.plus-btn').click(function() {
                var $input = $(this).siblings('.quantity-input');
                var currentVal = parseInt($input.val());
                var maxVal = parseInt($input.attr('max'));
                
                if (currentVal < maxVal) {
                    $input.val(currentVal + 1);
                    updateQuantity($(this).closest('.cart-item'), currentVal + 1);
                } else {
                    alert('Maximum available quantity reached!');
                }
            });
            
            $('.minus-btn').click(function() {
                var $input = $(this).siblings('.quantity-input');
                var currentVal = parseInt($input.val());
                
                if (currentVal > 1) {
                    $input.val(currentVal - 1);
                    updateQuantity($(this).closest('.cart-item'), currentVal - 1);
                }
            });
            
            $('.quantity-input').change(function() {
                var $input = $(this);
                var currentVal = parseInt($input.val());
                var maxVal = parseInt($input.attr('max'));
                
                if (isNaN(currentVal) || currentVal < 1) {
                    $input.val(1);
                    currentVal = 1;
                } else if (currentVal > maxVal) {
                    $input.val(maxVal);
                    currentVal = maxVal;
                    alert('Maximum available quantity reached!');
                }
                
                updateQuantity($(this).closest('.cart-item'), currentVal);
            });
            
            // Update quantity via AJAX
            function updateQuantity($item, quantity) {
                var productId = $item.data('product-id');
                
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Cart")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update subtotal for this item
                            $item.find('.item-subtotal').text(response.subtotal.toLocaleString() + ' MDL');
                            
                            // Update cart totals
                            $('.cart-subtotal').text(response.total.toLocaleString() + ' MDL');
                            $('.cart-total').text(response.total.toLocaleString() + ' MDL');
                            
                            // Update cart count
                            $('.cart-count').text(response.cartCount);
                        } else {
                            // Reset to max quantity if error
                            if (response.maxQuantity) {
                                $item.find('.quantity-input').val(response.maxQuantity);
                                updateQuantity($item, response.maxQuantity);
                            }
                            alert(response.message);
                        }
                    }
                });
            }
            
            // Remove item from cart
            $('.remove-item').click(function() {
                var $item = $(this).closest('.cart-item');
                var productId = $item.data('product-id');
                
                if (confirm('Are you sure you want to remove this item from your cart?')) {
                    $.ajax({
                        url: '@Url.Action("RemoveFromCart", "Cart")',
                        type: 'POST',
                        data: { productId: productId },
                        success: function(response) {
                            if (response.success) {
                                $item.fadeOut(300, function() {
                                    $(this).remove();
                                    
                                    // Update cart totals
                                    $('.cart-subtotal').text(response.total.toLocaleString() + ' MDL');
                                    $('.cart-total').text(response.total.toLocaleString() + ' MDL');
                                    
                                    // Update cart count
                                    $('.cart-count').text(response.cartCount);
                                    
                                    // Reload page if cart empty
                                    if (response.cartCount === 0) {
                                        location.reload();
                                    }
                                });
                            }
                        }
                    });
                }
            });
            
            // Clear cart
            $('#clearCart').click(function() {
                if (confirm('Are you sure you want to clear your cart? This will remove all items.')) {
                    $.ajax({
                        url: '@Url.Action("ClearCart", "Cart")',
                        type: 'POST',
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            }
                        }
                    });
                }
            });
        });
    </script>
} 